minikube start
# Use Minikubeâ€™s Docker daemon
eval $(minikube docker-env)
docker build -t dock1982:latest .
kubectl apply -f k8s/deployment.yaml
kubectl apply -f k8s/service.yaml
kubectl get pods
kubectl get svc
minikube service <service-name> --url


Review/Edit your azure-pipelines.yaml
  trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureContainerRegistry: <your_acr_name>.azurecr.io
  imageName: $(Build.Repository.Name)

steps:
- task: Docker@2
  displayName: Build and push image to ACR
  inputs:
    command: buildAndPush
    repository: $(azureContainerRegistry)/$(imageName)
    dockerfile: Dockerfile
    containerRegistry: '<ServiceConnectionToACR>'
    tags: |
      $(Build.BuildId)

- task: Kubernetes@1
  displayName: Deploy to AKS
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'conn_1'
    azureResourceGroup: 'testrg'
    kubernetesCluster: 'acrtestrg001'
    namespace: 'default'
    command: apply
    useConfigurationFile: true
    configuration: |
      k8s/deployment.yaml
      k8s/service.yaml



Add Annotations to catalog-info.yaml
metadata:
  annotations:
    github.com/project-slug: arvindinfa/repo4000
    dev.azure.com/project: "<YOUR_ORG>/<YOUR_PROJECT>/_build?definitionId=<PIPELINE_ID>"
dev.azure.com/project: "arvindinfadevops/SampleProject/_build?definitionId=12"


app-config.yaml
integrations:
  azure:
    - host: dev.azure.com
      token: BO9YQdTZ92zr4naE7yy54Gbz0aAGjVpLV1Dof0Qr5rwIMvNXTs6gJQQJ99BFACAAAAAAAAAAAAASAZDO2O9e

